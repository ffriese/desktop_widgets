# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master", "dev", "pyinstaller_build" ]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.11"]
    env:
      DISPLAY: ':99.0'

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        cache: 'pip' # caching pip dependencies
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - uses: tlambert03/setup-qt-libs@v1
    - name: Start virtual display on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
          /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1920x1200x24 -ac +extension GLX
    - name: Start virtual display on MacOS
      if: matrix.os == 'macos-latest'
      run: |
          Xvfb :99 &
          export DISPLAY=:99

    - name: Test with pytest
      run: |
        pytest
    - name: install pillow on macos
      if: github.ref == 'refs/heads/pyinstaller_build' && matrix.os == 'macos-latest'
      run: pip install Pillow
    - name: Create Release-Artifact
      if: github.ref == 'refs/heads/pyinstaller_build'
      run: |
        pip install pyinstaller
        python build.py
    - uses: actions/upload-artifact@v3
      with:
        name: desktop-widgets-${{ matrix.os }}
        path: dist/*


